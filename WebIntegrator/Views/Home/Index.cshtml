@using WebIntegrator.Models
@model SearcherViewModel
@{
    ViewBag.Title = "Интегратор русскоязычных курсов";
}
<meta name="viewport" content="width=device-width, initial-scale=1">
<form method="post">
    <div class="form-inline my-1 my-lg-5">
        @Html.TextBoxFor(m => m.NameText, new { @class = "form-control mr-md-2", placeholder = "Название..." })
        <button class="btn btn-secondary my-2 my-sm-0" type="submit">Поиск</button>
    </div>
    <div class="row">
        <div class="col-xl-3">
            <div class="card text-white bg-primary mb-3" style="max-width: 20rem;">
                <div class="btn-group btn-group-toggle" data-toggle="buttons">
                    <label class="btn btn-primary btn-lg btn-block @(Model.IsSertificate ? "active" : "")">
                        <input type="checkbox" autocomplete="@(Model.IsSertificate ? "on" : "off")" name="IsSertificate" id="IsSertificate"> С сертификатом
                    </label>
                </div>
            </div>
            <div class="card text-white bg-primary mb-3" style="max-width: 20rem;">
                <div class="btn-group btn-group-toggle" data-toggle="buttons">
                    <label class="btn btn-primary @(Model.IsSchool ? "active" : "")">
                        <input type="checkbox" autocomplete="@(Model.IsSchool ? "on" : "off")" name="IsSchool" id="IsSchool"> Школа
                    </label>
                    <label class="btn btn-primary @(Model.IsUniversity ? "active" : "")">
                        <input type="checkbox" autocomplete="@(Model.IsUniversity ? "on" : "off")" name="IsUniversity" id="IsUniversity">
                        Высшее <br>
                        образование
                    </label>
                    <label class="btn btn-primary @(Model.IsQulification ? "active" : "")">
                        <input type="checkbox" autocomplete="@(Model.IsQulification ? "on" : "off")" name="IsQulification" id="IsQulification">
                        Повышение <br>
                        квалиф-ции
                    </label>
                </div>
            </div>

            <div class="card border-secondary mb-3" style="max-width: 20rem;">
                <div class="card-header">Предметная область</div>
                <div class="card-body" id="CardBodySubject">
                    @{
                        int i = 0;
                    }
                    @foreach (var sub in Model.Subjects)
                    {
                        if (sub.Key != "Другое")
                        {
                            <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                <label class="btn btn-outline-primary btn-lg btn-block @(sub.Value ? "active" : "")">
                                    <input type="checkbox" autocomplete="@(sub.Value ? "on" : "off")" name="@sub.Key" id="@sub.Key">
                                          @sub.Key
                                </label>
                            </div>
                        }
                        i++;
                    }
                    <div class="btn-group btn-group-toggle" data-toggle="buttons">
                        <label class="btn btn-outline-primary btn-lg btn-block @(Model.Subjects["Другое"] ? "active" : "")">
                            <input type="checkbox" autocomplete="@(Model.Subjects["Другое"] ? "on" : "off")" name="Другое" id="Другое">
                            Другое
                        </label>
                    </div>
                </div>
            </div>

            <div class="card border-primary mb-3" style="max-width: 20rem;">
                <div class="card-header">Институт</div>
                <div class="card-body">
                    <div class="card-body" id="CardBodyUniversity">
                        @foreach (var univer in Model.University)
                        {
                            <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                <label class="btn btn-outline-secondary btn-lg btn-block @(univer.Value ? "active" : "")">
                                    <input type="checkbox" autocomplete="@(univer.Value ? "on" : "off")" name="@univer.Key" id="@univer.Key">
                                        @univer.Key
                                </label>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="card border-secondary mb-3" style="max-width: 20rem;">
                <div class="card-header">Провайдер</div>
                <div class="card-body">
                    <div class="card-body" id="CardBodyProvider">
                        @foreach (var prov in Model.Provider)
                        {
                            <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                <label class="btn btn-outline-primary btn-lg btn-block @(prov.Value ? "active" : "")">
                                    <input type="checkbox" name="@prov.Key" id="@prov.Key" autocomplete="@(prov.Value ? "on" : "off")"> @prov.Key
                                </label>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="card border-primary mb-3" style="max-width: 20rem;">
                <div class="card-header">Время начала</div>
                <div class="card-body">
                    <div class="card-body" id="CardBodyStartTime">
                        @{ i = 0; }
                        @foreach (var time in Model.StartTime)
                        {
                            <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                <label class="btn btn-outline-secondary btn-lg btn-block @(time.Value ? "active" : "")">
                                    <input type="checkbox" name="@time.Key" id="@time.Key" autocomplete="@(time.Value ? "on" : "off")"> @time.Key
                                </label>
                            </div>
                            i++;
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            @if (!Model.IsSearching || Model.SearchingCourses.Count > 0)
            {
                <label class="lable-title-new">Курсы, найденные по запросу: </label>
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th scope="col">Название</th>
                            <th scope="col">Предметная <br> область</th>
                            <th scope="col">Время <br> начала</th>
                            <th scope="col">Провайдер</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            i = 0;
                        }
                        @foreach (var course in Model.SearchingCourses)
                        {
                            <tr class="@(i % 2 == 0 ? "table-primary" : "table-secondary")">
                                <th scope="row">
                                    <a href="@course.URL"> @course.Name </a>
                                </th>
                                <td>@course.Subject</td>
                                <td>@course.StartTime</td>
                                <td>@course.Provider</td>
                            </tr>
                            i++;
                        }
                    </tbody>
                </table>
            }
            else
            {
                <label class="lable-title-new">По Вашему запросу ничего не найдено :( </label>
            }
        </div>
        <div class="col-xl-3">
            <label class="lable-title-new">Может быть интересно:</label>
            @{
                i = 0;
            }
            @if (Model.RecommendedCourses.Count != 0)
             {
                Searcher.Administration.ToLog("Рекомендованные курсы:");
                foreach (var course in Model.RecommendedCourses)
                {
                    <div class="card @(i % 2 == 0 ? "border-primary" : "border-secondary") mb-3" style="max-width: 20rem;">
                        <div class="card-header">
                            <a href="@course.URL">@course.Name</a>
                        </div>
                        <div class="card-body">
                            <p class="card-title">@course.Subject</p>
                            <p class="card-text">
                                Время начала: @course.StartTime <br>
                                Провайдер: @course.Provider <br>
                                Институт (автор): @course.University
                            </p>
                        </div>
                    </div>
                    i++;
                    Searcher.Administration.ToLog(course.Name);
                }
            }
            else
            {
                <div class="card border-primary mb-3" style="max-width: 20rem;">
                    <div class="card-header">
                        Здесь будут курсы, которые могут Вас заинтересовать
                    </div>
                    <div class="card-body">
                        <p class="card-title">А пока здесь котик:</p>
                        <p class="card-img">
                            <img style="height: 200px; width: 100%; display: block;" src="https://scontent.cdninstagram.com/vp/a914e163fc80e8aa9532d1cd5a06e517/5B8CBBA3/t51.2885-15/s640x640/sh0.08/e35/30604796_2089716887966076_5586376795545927680_n.jpg" alt="Card image">
                        </p>
                    </div>
                </div>
            }
        </div>
    </div>
</form>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
